<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2023 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.google.cloud</groupId>
    <artifactId>alloydb-connector-parent</artifactId>
    <version>0.5.1-SNAPSHOT</version><!-- {x-version-update:alloydb-jdbc-connector:current} -->
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>alloydb-jdbc-connector</artifactId>
  <packaging>jar</packaging>

  <name>Google Cloud AlloyDB JDBC Connector</name>
  <description>
    The AlloyDB JDBC Connector provides a socket factory for the Postgres JDBC
    driver for AlloyDB. The socket factory provides an mTLS 1.3 connection to
    any specified AlloyDB instance without requiring any manually configured
    TLS certificates.
  </description>
  <url>https://github.com/GoogleCloudPlatform/alloydb-java-connector</url>

  <properties>
    <bouncycastle.version>1.77</bouncycastle.version>
    <postgresql.version>42.7.1</postgresql.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <ignoredDependencies>
            <!-- The postgres driver must be provided by client application and is otherwise unused here. -->
            <ignoredDependency>org.postgresql:postgresql:*</ignoredDependency>
            <!-- A transitive dependency use only in test directly, but can't be marked as test scope. -->
            <ignoredDependency>com.google.auth:google-auth-library-credentials:*</ignoredDependency>
          </ignoredDependencies>
          <usedDependencies>
            <!-- This dependency is not used at compile-time. -->
            <dependency>ch.qos.logback:logback-classic</dependency>
          </usedDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.google.api.grpc</groupId>
      <artifactId>proto-google-cloud-alloydb-v1alpha</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.api.grpc</groupId>
      <artifactId>proto-google-cloud-alloydb-connectors-v1</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-alloydb</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.api</groupId>
      <artifactId>gax</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>2.24.1</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-oauth2-http</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-credentials</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.11</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.3.12</version>
      <scope>test</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>1.4.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Using this for the deterministic scheduler class only -->
    <dependency>
      <groupId>org.jmock</groupId>
      <artifactId>jmock</artifactId>
      <version>2.12.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>4.0.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk18on</artifactId>
      <version>${bouncycastle.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- com.google.cloud.alloydb.nativeimage.AlloyDBFeature needs the GraalVM
      dependencies for compilation. The provided-scope dependencies do not add
      additional dependencies to library users. -->
    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>22.0.0</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <profiles>
    <!-- The native maven plugin leaves provided scope dependencies out of the
      classpath, so adding these drivers back in for the native profile is a
      workaround.
    -->
    <profile>
      <id>native</id>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>${postgresql.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
